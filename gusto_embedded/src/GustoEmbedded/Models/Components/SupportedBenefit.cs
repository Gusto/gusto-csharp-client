//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// Example response
    /// </summary>
    public class SupportedBenefit
    {

        /// <summary>
        /// The benefit type in Gusto.
        /// </summary>
        [JsonProperty("benefit_type")]
        public long? BenefitType { get; set; }

        /// <summary>
        /// The name of the benefit.
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The description of the benefit.
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Whether the benefit is deducted before tax calculations, thus reducing oneâ€™s taxable income
        /// </summary>
        [JsonProperty("pretax")]
        public bool? Pretax { get; set; }

        /// <summary>
        /// Whether the benefit is deducted after tax calculations.
        /// </summary>
        [JsonProperty("posttax")]
        public bool? Posttax { get; set; }

        /// <summary>
        /// Whether the benefit is considered imputed income.
        /// </summary>
        [JsonProperty("imputed")]
        public bool? Imputed { get; set; }

        /// <summary>
        /// Whether the benefit is healthcare related.
        /// </summary>
        [JsonProperty("healthcare")]
        public bool? Healthcare { get; set; }

        /// <summary>
        /// Whether the benefit is associated with retirement planning.
        /// </summary>
        [JsonProperty("retirement")]
        public bool? Retirement { get; set; }

        /// <summary>
        /// Whether the benefit has a government mandated yearly limit. If the benefit has a government mandated yearly limit, employees cannot be added to more than one benefit of this type.
        /// </summary>
        [JsonProperty("yearly_limit")]
        public bool? YearlyLimit { get; set; }

        /// <summary>
        /// Category where the benefit belongs to.
        /// </summary>
        [JsonProperty("category")]
        public string? Category { get; set; }
    }
}