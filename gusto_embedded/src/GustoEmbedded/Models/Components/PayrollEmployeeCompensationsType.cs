//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    public class PayrollEmployeeCompensationsType
    {

        /// <summary>
        /// The UUID of the employee.
        /// </summary>
        [JsonProperty("employee_uuid")]
        public string? EmployeeUuid { get; set; }

        /// <summary>
        /// This employee will be excluded (skipped) from payroll calculation and will not be paid for the payroll. Cancelling a payroll would reset all employees&apos; excluded back to false.
        /// </summary>
        [JsonProperty("excluded")]
        public bool? Excluded { get; set; }

        /// <summary>
        /// The current version of this employee compensation. This field is only available for prepared payrolls. See the <a href="https://docs.gusto.com/embedded-payroll/docs/idempotency">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string? Version { get; set; }

        /// <summary>
        /// The employee&apos;s gross pay, equal to regular wages + cash tips + payroll tips + any other additional earnings, excluding imputed income. This value is only available for processed payrolls.
        /// </summary>
        [JsonProperty("gross_pay")]
        public double? GrossPay { get; set; } = null;

        /// <summary>
        /// The employee&apos;s net pay, equal to gross_pay - employee taxes - employee deductions or garnishments - cash tips. This value is only available for processed payrolls.
        /// </summary>
        [JsonProperty("net_pay")]
        public double? NetPay { get; set; } = null;

        /// <summary>
        /// The employee&apos;s check amount, equal to net_pay + reimbursements. This value is only available for processed payrolls.
        /// </summary>
        [JsonProperty("check_amount")]
        public double? CheckAmount { get; set; } = null;

        /// <summary>
        /// The employee&apos;s compensation payment method.
        /// </summary>
        [JsonProperty("payment_method")]
        public PayrollEmployeeCompensationsTypePaymentMethod? PaymentMethod { get; set; } = null;

        /// <summary>
        /// Custom text that will be printed as a personal note to the employee on a paystub.
        /// </summary>
        [JsonProperty("memo")]
        public string? Memo { get; set; } = null;

        /// <summary>
        /// An array of fixed compensations for the employee. Fixed compensations include tips, bonuses, and one time reimbursements. If this payroll has been processed, only fixed compensations with a value greater than 0.00 are returned. For an unprocessed payroll, all active fixed compensations are returned.
        /// </summary>
        [JsonProperty("fixed_compensations")]
        public List<Models.Components.FixedCompensations>? FixedCompensations { get; set; }

        /// <summary>
        /// An array of hourly compensations for the employee. Hourly compensations include regular, overtime, and double overtime hours. If this payroll has been processed, only hourly compensations with a value greater than 0.00 are returned. For an unprocessed payroll, all active hourly compensations are returned.
        /// </summary>
        [JsonProperty("hourly_compensations")]
        public List<Models.Components.HourlyCompensations>? HourlyCompensations { get; set; }

        /// <summary>
        /// An array of all paid time off the employee is eligible for this pay period.
        /// </summary>
        [JsonProperty("paid_time_off")]
        public List<PayrollEmployeeCompensationsTypePaidTimeOff>? PaidTimeOff { get; set; }

        /// <summary>
        /// An array of employee benefits for the pay period. Benefits are only included for processed payroll when the include parameter is present.
        /// </summary>
        [JsonProperty("benefits")]
        public List<Models.Components.Benefits>? Benefits { get; set; }

        /// <summary>
        /// An array of employee deductions for the pay period. Deductions are only included for processed payroll when the include parameter is present.
        /// </summary>
        [JsonProperty("deductions")]
        public List<Deductions>? Deductions { get; set; }

        /// <summary>
        /// An array of employer and employee taxes for the pay period. Only included for processed or calculated payrolls when `taxes` is present in the `include` parameter.
        /// </summary>
        [JsonProperty("taxes")]
        public List<Models.Components.Taxes>? Taxes { get; set; }
    }
}