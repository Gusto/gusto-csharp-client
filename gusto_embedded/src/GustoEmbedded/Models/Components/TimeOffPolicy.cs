//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    /// <summary>
    /// Representation of a Time Off Policy
    /// </summary>
    public class TimeOffPolicy
    {

        /// <summary>
        /// Unique identifier of a time off policy
        /// </summary>
        [JsonProperty("uuid")]
        public string Uuid { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the company owning the time off policy
        /// </summary>
        [JsonProperty("company_uuid")]
        public string CompanyUuid { get; set; } = default!;

        /// <summary>
        /// Name of the time off policy
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Type of the time off policy
        /// </summary>
        [JsonProperty("policy_type")]
        public PolicyType PolicyType { get; set; } = default!;

        /// <summary>
        /// Policy time off accrual method
        /// </summary>
        [JsonProperty("accrual_method")]
        public string AccrualMethod { get; set; } = default!;

        /// <summary>
        /// The rate at which the time off hours will accrue for an employee on the policy. Represented as a float, e.g. &quot;40.0&quot;.
        /// </summary>
        [JsonProperty("accrual_rate")]
        public string? AccrualRate { get; set; }

        /// <summary>
        /// The number of hours an employee has to work or be paid for to accrue the number of hours set in the accrual rate. Only used for hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work, per_hour_worked_no_overtime). Represented as a float, e.g. &quot;40.0&quot;.
        /// </summary>
        [JsonProperty("accrual_rate_unit")]
        public string? AccrualRateUnit { get; set; }

        /// <summary>
        /// Boolean representing if an employee&apos;s accrued time off hours will be paid out on termination
        /// </summary>
        [JsonProperty("paid_out_on_termination")]
        public bool? PaidOutOnTermination { get; set; }

        /// <summary>
        /// Number of days before an employee on the policy will begin accruing time off hours
        /// </summary>
        [JsonProperty("accrual_waiting_period_days")]
        public long? AccrualWaitingPeriodDays { get; set; }

        /// <summary>
        /// The max number of hours an employee can carryover from one year to the next
        /// </summary>
        [JsonProperty("carryover_limit_hours")]
        public string? CarryoverLimitHours { get; set; }

        /// <summary>
        /// The max number of hours an employee can accrue in a year
        /// </summary>
        [JsonProperty("max_accrual_hours_per_year")]
        public string? MaxAccrualHoursPerYear { get; set; }

        /// <summary>
        /// The max number of hours an employee can accrue
        /// </summary>
        [JsonProperty("max_hours")]
        public string? MaxHours { get; set; }

        /// <summary>
        /// boolean representing if a policy has completed configuration
        /// </summary>
        [JsonProperty("complete")]
        public bool? Complete { get; set; }

        /// <summary>
        /// The current version of the object. See the <a href="https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string? Version { get; set; }

        /// <summary>
        /// boolean representing if a policy is active or not
        /// </summary>
        [JsonProperty("is_active")]
        public bool IsActive { get; set; } = default!;

        /// <summary>
        /// List of employee UUIDs under a time off policy
        /// </summary>
        [JsonProperty("employees")]
        public List<TimeOffPolicyEmployees> Employees { get; set; } = default!;
    }
}