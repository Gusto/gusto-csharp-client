//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// The representation of a contractor (individual or business) in Gusto.
    /// </summary>
    public class Contractor
    {

        /// <summary>
        /// The UUID of the contractor in Gusto.
        /// </summary>
        [JsonProperty("uuid")]
        public string Uuid { get; set; } = default!;

        /// <summary>
        /// The UUID of the company the contractor is employed by.
        /// </summary>
        [JsonProperty("company_uuid")]
        public string? CompanyUuid { get; set; }

        /// <summary>
        /// The contractor&apos;s wage type, either &quot;Fixed&quot; or &quot;Hourly&quot;.
        /// </summary>
        [JsonProperty("wage_type")]
        public Models.Components.WageType? WageType { get; set; }

        /// <summary>
        /// The status of the contractor with the company.
        /// </summary>
        [JsonProperty("is_active")]
        public bool? IsActive { get; set; } = true;

        /// <summary>
        /// The current version of the object. See the <a href="https://docs.gusto.com/embedded-payroll/docs/idempotency">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string? Version { get; set; }

        /// <summary>
        /// The contractor&apos;s type, either &quot;Individual&quot; or &quot;Business&quot;. 
        /// </summary>
        [JsonProperty("type")]
        public ContractorType? Type { get; set; }

        /// <summary>
        /// The contractor’s first name. This attribute is required for “Individual” contractors and will be ignored for “Business” contractors.
        /// </summary>
        [JsonProperty("first_name")]
        public string? FirstName { get; set; } = null;

        /// <summary>
        /// The contractor’s last name. This attribute is required for “Individual” contractors and will be ignored for “Business” contractors.
        /// </summary>
        [JsonProperty("last_name")]
        public string? LastName { get; set; } = null;

        /// <summary>
        /// The contractor’s middle initial. This attribute is optional for “Individual” contractors and will be ignored for “Business” contractors.
        /// </summary>
        [JsonProperty("middle_initial")]
        public string? MiddleInitial { get; set; } = null;

        /// <summary>
        /// The name of the contractor business. This attribute is required for “Business” contractors and will be ignored for “Individual” contractors.
        /// </summary>
        [JsonProperty("business_name")]
        public string? BusinessName { get; set; } = null;

        /// <summary>
        /// The Federal Employer Identification Number of the contractor business. This attribute is optional for “Business” contractors and will be ignored for “Individual” contractors.
        /// </summary>
        [JsonProperty("ein")]
        public string? Ein { get; set; } = null;

        /// <summary>
        /// Whether company&apos;s Employer Identification Number (EIN) is present
        /// </summary>
        [JsonProperty("has_ein")]
        public bool? HasEin { get; set; } = null;

        /// <summary>
        /// The contractor’s email address. This attribute is optional for “Individual” contractors and will be ignored for “Business” contractors. 
        /// </summary>
        [JsonProperty("email")]
        public string? Email { get; set; } = null;

        /// <summary>
        /// The contractor&apos;s start date.
        /// </summary>
        [JsonProperty("start_date")]
        public string? StartDate { get; set; }

        /// <summary>
        /// The contractor’s home address.
        /// </summary>
        [JsonProperty("address")]
        public Address? Address { get; set; } = null;

        /// <summary>
        /// The contractor’s hourly rate. This attribute is required if the wage_type is “Hourly”.
        /// </summary>
        [JsonProperty("hourly_rate")]
        public string? HourlyRate { get; set; }

        /// <summary>
        /// The boolean flag indicating whether Gusto will file a new hire report for the contractor
        /// </summary>
        [JsonProperty("file_new_hire_report")]
        public bool? FileNewHireReport { get; set; } = false;

        /// <summary>
        /// State where the contractor will be conducting the majority of their work for the company.<br/>
        /// 
        /// <remarks>
        /// This value is used when generating the new hire report.
        /// </remarks>
        /// </summary>
        [JsonProperty("work_state")]
        public string? WorkState { get; set; } = null;

        /// <summary>
        /// The updated onboarding status for the contractor
        /// </summary>
        [JsonProperty("onboarded")]
        public bool? Onboarded { get; set; }

        /// <summary>
        /// One of the &quot;onboarding_status&quot; enum values.
        /// </summary>
        [JsonProperty("onboarding_status")]
        public ContractorOnboardingStatus1? OnboardingStatus { get; set; }

        /// <summary>
        /// The contractor&apos;s payment method.
        /// </summary>
        [JsonProperty("payment_method")]
        public ContractorPaymentMethod1? PaymentMethod { get; set; } = null;

        /// <summary>
        /// Indicates whether the contractor has an SSN in Gusto.
        /// </summary>
        [JsonProperty("has_ssn")]
        public bool? HasSsn { get; set; }

        /// <summary>
        /// The UUID of the department the contractor is under
        /// </summary>
        [JsonProperty("department_uuid")]
        public string? DepartmentUuid { get; set; } = null;
    }
}