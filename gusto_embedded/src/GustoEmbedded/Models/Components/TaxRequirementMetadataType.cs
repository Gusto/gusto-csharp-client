//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// Describes the type of requirement - each type may have additional metadata properties to describe possible values, formats, etc.<br/>
    /// 
    /// <remarks>
    /// <br/>
    /// - `text`: free-text input, no additional requirements<br/>
    /// - `currency`: a value representing a dollar amount, e.g. `374.55` representing `$374.55`<br/>
    /// - `radio`: choose one of options provided, see `options`<br/>
    /// - `select`: choose one of options provided, see `options`<br/>
    /// - `percent`: A decimal value representing a percentage, e.g. `0.034` representing `3.4%`<br/>
    /// - `account_number`: An account number for a tax agency, more information provided by `mask` and `prefix`<br/>
    /// - `tax_rate`: A decimal value representing a tax rate, e.g. `0.034` representing a tax rate of `3.4%`, see `validation` for additional validation guidance<br/>
    /// - `workers_compensation_rate`: A decimal value representing a percentage, see `risk_class_code`, `risk_class_description`, and `rate_type`<br/>
    /// 
    /// </remarks>
    /// </summary>
    public enum TaxRequirementMetadataType
    {
        [JsonProperty("text")]
        Text,
        [JsonProperty("currency")]
        Currency,
        [JsonProperty("radio")]
        Radio,
        [JsonProperty("select")]
        Select,
        [JsonProperty("percent")]
        Percent,
        [JsonProperty("account_number")]
        AccountNumber,
        [JsonProperty("tax_rate")]
        TaxRate,
        [JsonProperty("workers_compensation_rate")]
        WorkersCompensationRate,
    }

    public static class TaxRequirementMetadataTypeExtension
    {
        public static string Value(this TaxRequirementMetadataType value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static TaxRequirementMetadataType ToEnum(this string value)
        {
            foreach(var field in typeof(TaxRequirementMetadataType).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is TaxRequirementMetadataType)
                    {
                        return (TaxRequirementMetadataType)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum TaxRequirementMetadataType");
        }
    }

}