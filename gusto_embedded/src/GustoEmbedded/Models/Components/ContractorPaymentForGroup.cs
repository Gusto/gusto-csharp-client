//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// The representation of a single contractor payment.
    /// </summary>
    public class ContractorPaymentForGroup
    {

        /// <summary>
        /// The unique identifier of the contractor payment in Gusto.
        /// </summary>
        [JsonProperty("uuid")]
        public string? Uuid { get; set; }

        /// <summary>
        /// The UUID of the contractor.
        /// </summary>
        [JsonProperty("contractor_uuid")]
        public string? ContractorUuid { get; set; }

        /// <summary>
        /// The bonus amount in the payment.
        /// </summary>
        [JsonProperty("bonus")]
        public string? Bonus { get; set; }

        /// <summary>
        /// The number of hours worked for the payment.
        /// </summary>
        [JsonProperty("hours")]
        public string? Hours { get; set; }

        /// <summary>
        /// The payment method.
        /// </summary>
        [JsonProperty("payment_method")]
        public ContractorPaymentForGroupPaymentMethod? PaymentMethod { get; set; }

        /// <summary>
        /// The reimbursement amount in the payment.
        /// </summary>
        [JsonProperty("reimbursement")]
        public string? Reimbursement { get; set; }

        /// <summary>
        /// The status of the contractor payment.  Will transition to `Funded` during payments processing if the payment should be funded, i.e. has `Direct Deposit` for payment method. Contractors payments with `Check` payment method will remain `Unfunded`.
        /// </summary>
        [JsonProperty("status")]
        public ContractorPaymentForGroupStatus? Status { get; set; }

        /// <summary>
        /// The rate per hour worked for the payment.
        /// </summary>
        [JsonProperty("hourly_rate")]
        public string? HourlyRate { get; set; }

        /// <summary>
        /// Determine if the contractor payment can be cancelled.
        /// </summary>
        [JsonProperty("may_cancel")]
        public bool? MayCancel { get; set; }

        /// <summary>
        /// The fixed wage of the payment, regardless of hours worked.
        /// </summary>
        [JsonProperty("wage")]
        public string? Wage { get; set; }

        /// <summary>
        /// The wage type for the payment.
        /// </summary>
        [JsonProperty("wage_type")]
        public ContractorPaymentForGroupWageType? WageType { get; set; }

        /// <summary>
        /// (hours * hourly_rate) + wage + bonus
        /// </summary>
        [JsonProperty("wage_total")]
        public string? WageTotal { get; set; }
    }
}