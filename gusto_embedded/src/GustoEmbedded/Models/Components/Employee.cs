//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    /// <summary>
    /// The representation of an employee in Gusto.
    /// </summary>
    public class Employee
    {

        /// <summary>
        /// The UUID of the employee in Gusto.
        /// </summary>
        [JsonProperty("uuid")]
        public string Uuid { get; set; } = default!;

        [JsonProperty("first_name")]
        public string FirstName { get; set; } = default!;

        [JsonProperty("middle_initial")]
        public string? MiddleInitial { get; set; } = null;

        [JsonProperty("last_name")]
        public string LastName { get; set; } = default!;

        /// <summary>
        /// The personal email address of the employee. This is provided to support syncing users between our system and yours. You may not use this email address for any other purpose (e.g. marketing).
        /// </summary>
        [JsonProperty("email")]
        public string? Email { get; set; } = null;

        /// <summary>
        /// The UUID of the company the employee is employed by.
        /// </summary>
        [JsonProperty("company_uuid")]
        public string? CompanyUuid { get; set; }

        /// <summary>
        /// The UUID of the employee&apos;s manager.
        /// </summary>
        [JsonProperty("manager_uuid")]
        public string? ManagerUuid { get; set; } = null;

        /// <summary>
        /// The current version of the employee. See the <a href="https://docs.gusto.com/embedded-payroll/docs/idempotency">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string? Version { get; set; }

        /// <summary>
        /// The employee&apos;s department in the company.
        /// </summary>
        [JsonProperty("department")]
        public string? Department { get; set; } = null;

        /// <summary>
        /// Whether the employee is terminated.
        /// </summary>
        [JsonProperty("terminated")]
        public bool? Terminated { get; set; }

        /// <summary>
        /// Whether the employee is a two percent shareholder of the company. This field only applies to companies with an S-Corp entity type.
        /// </summary>
        [JsonProperty("two_percent_shareholder")]
        public bool? TwoPercentShareholder { get; set; } = null;

        /// <summary>
        /// Whether the employee has completed onboarding.
        /// </summary>
        [JsonProperty("onboarded")]
        public bool? Onboarded { get; set; }

        /// <summary>
        /// The current onboarding status of the employee
        /// </summary>
        [JsonProperty("onboarding_status")]
        public Models.Components.OnboardingStatus? OnboardingStatus { get; set; }

        /// <summary>
        /// Configuration for an employee onboarding documents during onboarding
        /// </summary>
        [JsonProperty("onboarding_documents_config")]
        public OnboardingDocumentsConfig? OnboardingDocumentsConfig { get; set; }

        [JsonProperty("jobs")]
        public List<Models.Components.Job>? Jobs { get; set; }

        [JsonProperty("eligible_paid_time_off")]
        public List<Models.Components.PaidTimeOff>? EligiblePaidTimeOff { get; set; }

        [JsonProperty("terminations")]
        public List<Models.Components.Termination>? Terminations { get; set; }

        [JsonProperty("garnishments")]
        public List<Garnishment>? Garnishments { get; set; }

        /// <summary>
        /// Custom fields are only included for the employee if the include param has the custom_fields value set
        /// </summary>
        [JsonProperty("custom_fields")]
        public List<EmployeeCustomField>? CustomFields { get; set; }

        [JsonProperty("date_of_birth")]
        public string? DateOfBirth { get; set; } = null;

        /// <summary>
        /// Indicates whether the employee has an SSN in Gusto.
        /// </summary>
        [JsonProperty("has_ssn")]
        public bool? HasSsn { get; set; }

        /// <summary>
        /// Deprecated. This field always returns an empty string.
        /// </summary>
        [JsonProperty("ssn")]
        public string? Ssn { get; set; }

        [JsonProperty("phone")]
        public string? Phone { get; set; } = null;

        [JsonProperty("preferred_first_name")]
        public string? PreferredFirstName { get; set; } = null;

        /// <summary>
        /// The employee&apos;s payment method
        /// </summary>
        [JsonProperty("payment_method")]
        public Models.Components.PaymentMethod? PaymentMethod { get; set; } = GustoEmbedded.Models.Components.PaymentMethod.Check;

        /// <summary>
        /// The work email address of the employee. This is provided to support syncing users between our system and yours. You may not use this email address for any other purpose (e.g. marketing).
        /// </summary>
        [JsonProperty("work_email")]
        public string? WorkEmail { get; set; } = null;

        /// <summary>
        /// The current employment status of the employee. Full-time employees work 30+ hours per week. Part-time employees are split into two groups: those that work 20-29 hours a week, and those that work under 20 hours a week. Variable employees have hours that vary each week. Seasonal employees are hired for 6 months of the year or less.
        /// </summary>
        [JsonProperty("current_employment_status")]
        public CurrentEmploymentStatus? CurrentEmploymentStatus { get; set; } = null;
    }
}