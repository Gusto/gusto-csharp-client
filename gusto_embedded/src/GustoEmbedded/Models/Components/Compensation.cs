//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    /// <summary>
    /// The representation of compensation in Gusto.
    /// </summary>
    public class Compensation
    {

        /// <summary>
        /// The UUID of the compensation in Gusto.
        /// </summary>
        [JsonProperty("uuid")]
        public string Uuid { get; set; } = default!;

        /// <summary>
        /// The current version of the object. See the <a href="https://docs.gusto.com/embedded-payroll/docs/idempotency">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string? Version { get; set; }

        /// <summary>
        /// The UUID of the job to which the compensation belongs.
        /// </summary>
        [JsonProperty("job_uuid")]
        public string? JobUuid { get; set; }

        /// <summary>
        /// The UUID of the employee to which the compensation belongs.
        /// </summary>
        [JsonProperty("employee_uuid")]
        public string? EmployeeUuid { get; set; }

        /// <summary>
        /// The dollar amount paid per payment unit.
        /// </summary>
        [JsonProperty("rate")]
        public string? Rate { get; set; }

        /// <summary>
        /// The unit accompanying the compensation rate. If the employee is an owner, rate should be &apos;Paycheck&apos;.
        /// </summary>
        [JsonProperty("payment_unit")]
        public Models.Components.PaymentUnit? PaymentUnit { get; set; }

        /// <summary>
        /// The FLSA status for this compensation. Salaried (&apos;Exempt&apos;) employees are paid a fixed salary every pay period. Salaried with overtime (&apos;Salaried Nonexempt&apos;) employees are paid a fixed salary every pay period, and receive overtime pay when applicable. Hourly (&apos;Nonexempt&apos;) employees are paid for the hours they work, and receive overtime pay when applicable. Commissioned employees (&apos;Commission Only Exempt&apos;) earn wages based only on commission. Commissioned with overtime (&apos;Commission Only Nonexempt&apos;) earn wages based on commission, and receive overtime pay when applicable. Owners (&apos;Owner&apos;) are employees that own at least twenty percent of the company. 
        /// </summary>
        [JsonProperty("flsa_status")]
        public FlsaStatusType? FlsaStatus { get; set; }

        /// <summary>
        /// The effective date for this compensation. For the first compensation, this defaults to the job&apos;s hire date.
        /// </summary>
        [JsonProperty("effective_date")]
        public string? EffectiveDate { get; set; }

        /// <summary>
        /// Indicates if the compensation could be adjusted to minimum wage during payroll calculation.
        /// </summary>
        [JsonProperty("adjust_for_minimum_wage")]
        public bool? AdjustForMinimumWage { get; set; }

        /// <summary>
        /// The minimum wages associated with the compensation.
        /// </summary>
        [JsonProperty("minimum_wages")]
        public List<Models.Components.MinimumWages>? MinimumWages { get; set; }
    }
}