//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// The summary of a contractor payment group.
    /// </summary>
    public class ContractorPaymentGroupMinimal
    {

        /// <summary>
        /// The unique identifier of the contractor payment group.
        /// </summary>
        [JsonProperty("uuid")]
        public string? Uuid { get; set; }

        /// <summary>
        /// The UUID of the company.
        /// </summary>
        [JsonProperty("company_uuid")]
        public string? CompanyUuid { get; set; }

        /// <summary>
        /// The check date of the contractor payment group.
        /// </summary>
        [JsonProperty("check_date")]
        public string? CheckDate { get; set; }

        /// <summary>
        /// The debit date of the contractor payment group.
        /// </summary>
        [JsonProperty("debit_date")]
        public string? DebitDate { get; set; }

        /// <summary>
        /// The status of the contractor payment group.  Will be `Funded` if all payments that should be funded (i.e. have `Direct Deposit` for payment method) are funded.  A group can have status `Funded` while having associated payments that have status `Unfunded`, i.e. payment with `Check` payment method.
        /// </summary>
        [JsonProperty("status")]
        public ContractorPaymentGroupMinimalStatus? Status { get; set; }

        /// <summary>
        /// Token used to make contractor payment group creation idempotent.  Will error if attempting to create a group with a duplicate token.
        /// </summary>
        [JsonProperty("creation_token")]
        public string? CreationToken { get; set; } = null;

        [JsonProperty("totals")]
        public ContractorPaymentGroupMinimalTotals? Totals { get; set; }
    }
}