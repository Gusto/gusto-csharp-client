//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Components
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// Example response
    /// </summary>
    public class EmployeeFederalTax
    {

        /// <summary>
        /// The current version of the object. See the <a href="https://docs.gusto.com/embedded-payroll/docs/idempotency">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; } = default!;

        /// <summary>
        /// It determines which tax return form an individual will use and is an important factor in computing taxable income. One of:<br/>
        /// 
        /// <remarks>
        /// - Single<br/>
        /// - Married<br/>
        /// - Head of Household<br/>
        /// - Exempt from withholding<br/>
        /// - Married, but withhold as Single (does not apply to rev_2020_w4 form)
        /// </remarks>
        /// </summary>
        [JsonProperty("filing_status")]
        public string FilingStatus { get; set; } = default!;

        /// <summary>
        /// An employee can request an additional amount to be withheld from each paycheck.
        /// </summary>
        [JsonProperty("extra_withholding", NullValueHandling = NullValueHandling.Include)]
        public string? ExtraWithholding { get; set; }

        /// <summary>
        /// If there are only two jobs (i.e., you and your spouse each have a job, or you have two), you can set it to true.
        /// </summary>
        [JsonProperty("two_jobs", NullValueHandling = NullValueHandling.Include)]
        public bool? TwoJobs { get; set; }

        /// <summary>
        /// A dependent is a person other than the taxpayer or spouse who entitles the taxpayer to claim a dependency exemption.
        /// </summary>
        [JsonProperty("dependents_amount", NullValueHandling = NullValueHandling.Include)]
        public string? DependentsAmount { get; set; }

        /// <summary>
        /// Other income amount.
        /// </summary>
        [JsonProperty("other_income", NullValueHandling = NullValueHandling.Include)]
        public string? OtherIncome { get; set; }

        /// <summary>
        /// Deductions other than the standard deduction to reduce withholding.
        /// </summary>
        [JsonProperty("deductions", NullValueHandling = NullValueHandling.Include)]
        public string? Deductions { get; set; }

        /// <summary>
        /// The version of w4 form.
        /// </summary>
        [JsonProperty("w4_data_type")]
        public W4DataType W4DataType { get; set; } = default!;

        /// <summary>
        /// *does not apply to rev_2020_w4 form*<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// An exemption from paying a certain amount of income tax.
        /// </remarks>
        /// </summary>
        [JsonProperty("federal_withholding_allowance")]
        public double? FederalWithholdingAllowance { get; set; }

        /// <summary>
        /// *does not apply to rev_2020_w4 form*
        /// </summary>
        [JsonProperty("additional_withholding")]
        public bool? AdditionalWithholding { get; set; }
    }
}