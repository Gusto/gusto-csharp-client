//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Requests
{
    using GustoEmbedded.Models.Requests;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System;
    
    public class PutV1EmployeeBenefitsEmployeeBenefitIdRequestBody
    {

        /// <summary>
        /// The current version of the object. See the <a href="https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer">versioning guide</a> for information on how to use this field.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; } = default!;

        /// <summary>
        /// Whether the employee benefit is active.
        /// </summary>
        [JsonProperty("active")]
        public bool? Active { get; set; }

        /// <summary>
        /// The amount to be deducted, per pay period, from the employee&apos;s pay.
        /// </summary>
        [JsonProperty("employee_deduction")]
        public string? EmployeeDeduction { get; set; } = "0.00";

        /// <summary>
        /// Whether the employee deduction amount should be treated as a percentage to be deducted from each payroll.
        /// </summary>
        [JsonProperty("deduct_as_percentage")]
        public bool? DeductAsPercentage { get; set; }

        /// <summary>
        /// The maximum employee deduction amount per year. A null value signifies no limit.
        /// </summary>
        [JsonProperty("employee_deduction_annual_maximum")]
        public string? EmployeeDeductionAnnualMaximum { get; set; } = null;

        /// <summary>
        /// An object representing the type and value of the company contribution.
        /// </summary>
        [JsonProperty("contribution")]
        public PutV1EmployeeBenefitsEmployeeBenefitIdContribution? Contribution { get; set; }

        /// <summary>
        /// Whether the company contribution is elective (aka &quot;matching&quot;). For `tiered`, `elective_amount`, and `elective_percentage` contribution types this is ignored and assumed to be `true`.
        /// </summary>
        [JsonProperty("elective")]
        public bool? Elective { get; set; } = false;

        /// <summary>
        /// The maximum company contribution amount per year. A null value signifies no limit.
        /// </summary>
        [JsonProperty("company_contribution_annual_maximum")]
        public string? CompanyContributionAnnualMaximum { get; set; } = null;

        /// <summary>
        /// Some benefits require additional information to determine<br/>
        /// 
        /// <remarks>
        /// their limit.<br/>
        /// <br/>
        /// `Family` or `Individual`: Applicable to HSA benefit.<br/>
        /// <br/>
        /// `Joint Filing or Single` or `Married and Filing Separately`: Applicable to Dependent Care FSA benefit.
        /// </remarks>
        /// </summary>
        [JsonProperty("limit_option")]
        public PutV1EmployeeBenefitsEmployeeBenefitIdLimitOption? LimitOption { get; set; } = null;

        /// <summary>
        /// Whether the employee should use a benefit’s &quot;catch up&quot; rate. Only Roth 401k and 401k benefits use this value for employees over 50.
        /// </summary>
        [JsonProperty("catch_up")]
        public bool? CatchUp { get; set; } = false;

        /// <summary>
        /// The amount that the employee is insured for. Note: company contribution cannot be present if coverage amount is set.
        /// </summary>
        [JsonProperty("coverage_amount")]
        public string? CoverageAmount { get; set; } = null;

        /// <summary>
        /// Whether the employee deduction reduces taxable income or not. Only valid for Group Term Life benefits. Note: when the value is not &quot;unset&quot;, coverage amount and coverage salary multiplier are ignored.
        /// </summary>
        [JsonProperty("deduction_reduces_taxable_income")]
        public PutV1EmployeeBenefitsEmployeeBenefitIdDeductionReducesTaxableIncome? DeductionReducesTaxableIncome { get; set; } = GustoEmbedded.Models.Requests.PutV1EmployeeBenefitsEmployeeBenefitIdDeductionReducesTaxableIncome.Unset;

        /// <summary>
        /// The coverage amount as a multiple of the employee’s salary. Only applicable for Group Term Life benefits. Note: cannot be set if coverage amount is also set.
        /// </summary>
        [JsonProperty("coverage_salary_multiplier")]
        public string? CoverageSalaryMultiplier { get; set; } = "0.00";

        /// <summary>
        /// The amount to be paid, per pay period, by the company.
        /// </summary>
        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("company_contribution")]
        public string? CompanyContribution { get; set; } = "0.00";

        /// <summary>
        /// Whether the company contribution amount should be treated as a percentage to be deducted from each payroll.
        /// </summary>
        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("contribute_as_percentage")]
        public bool? ContributeAsPercentage { get; set; } = false;
    }
}