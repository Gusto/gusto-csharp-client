//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Requests
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType
    {
        private GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType(string value) { Value = value; }

        public string Value { get; private set; }
        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType ContractorPaymentSummary { get { return new GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType("Contractor-Payment-Summary"); } }
        
        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType ContractorPaymentSummaryByDates { get { return new GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType("Contractor-Payment-Summary-By-Dates"); } }
        
        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType Null { get { return new GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType v) { return v.Value; }
        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType FromString(string v) {
            switch(v) {
                case "Contractor-Payment-Summary": return ContractorPaymentSummary;
                case "Contractor-Payment-Summary-By-Dates": return ContractorPaymentSummaryByDates;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// A JSON object containing contractor payments information
    /// </summary>
    [JsonConverter(typeof(GetV1CompaniesCompanyIdContractorPaymentsResponseBody.GetV1CompaniesCompanyIdContractorPaymentsResponseBodyConverter))]
    public class GetV1CompaniesCompanyIdContractorPaymentsResponseBody {
        public GetV1CompaniesCompanyIdContractorPaymentsResponseBody(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public ContractorPaymentSummary? ContractorPaymentSummary { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public ContractorPaymentSummaryByDates? ContractorPaymentSummaryByDates { get; set; }

        public GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType Type { get; set; }


        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBody CreateContractorPaymentSummary(ContractorPaymentSummary contractorPaymentSummary) {
            GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType typ = GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummary;

            GetV1CompaniesCompanyIdContractorPaymentsResponseBody res = new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(typ);
            res.ContractorPaymentSummary = contractorPaymentSummary;
            return res;
        }

        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBody CreateContractorPaymentSummaryByDates(ContractorPaymentSummaryByDates contractorPaymentSummaryByDates) {
            GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType typ = GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummaryByDates;

            GetV1CompaniesCompanyIdContractorPaymentsResponseBody res = new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(typ);
            res.ContractorPaymentSummaryByDates = contractorPaymentSummaryByDates;
            return res;
        }

        public static GetV1CompaniesCompanyIdContractorPaymentsResponseBody CreateNull() {
            GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType typ = GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.Null;
            return new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(typ);
        }

        public class GetV1CompaniesCompanyIdContractorPaymentsResponseBodyConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(GetV1CompaniesCompanyIdContractorPaymentsResponseBody);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummary)
                    {
                        ContractorPaymentSummary = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ContractorPaymentSummary>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ContractorPaymentSummary), new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummary), "ContractorPaymentSummary"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummaryByDates)
                    {
                        ContractorPaymentSummaryByDates = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ContractorPaymentSummaryByDates>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ContractorPaymentSummaryByDates), new GetV1CompaniesCompanyIdContractorPaymentsResponseBody(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.ContractorPaymentSummaryByDates), "ContractorPaymentSummaryByDates"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                GetV1CompaniesCompanyIdContractorPaymentsResponseBody res = (GetV1CompaniesCompanyIdContractorPaymentsResponseBody)value;
                if (GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.FromString(res.Type).Equals(GetV1CompaniesCompanyIdContractorPaymentsResponseBodyType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.ContractorPaymentSummary != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ContractorPaymentSummary));
                    return;
                }
                if (res.ContractorPaymentSummaryByDates != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ContractorPaymentSummaryByDates));
                    return;
                }

            }

        }

    }
}