//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Requests
{
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System;
    
    public enum PutV1WebhookSubscriptionUuidSubscriptionTypes
    {
        [JsonProperty("BankAccount")]
        BankAccount,
        [JsonProperty("Company")]
        Company,
        [JsonProperty("CompanyBenefit")]
        CompanyBenefit,
        [JsonProperty("Contractor")]
        Contractor,
        [JsonProperty("ContractorPayment")]
        ContractorPayment,
        [JsonProperty("Employee")]
        Employee,
        [JsonProperty("EmployeeBenefit")]
        EmployeeBenefit,
        [JsonProperty("EmployeeJobCompensation")]
        EmployeeJobCompensation,
        [JsonProperty("ExternalPayroll")]
        ExternalPayroll,
        [JsonProperty("Form")]
        Form,
        [JsonProperty("Location")]
        Location,
        [JsonProperty("Notification")]
        Notification,
        [JsonProperty("Payroll")]
        Payroll,
        [JsonProperty("PaySchedule")]
        PaySchedule,
        [JsonProperty("Signatory")]
        Signatory,
    }

    public static class PutV1WebhookSubscriptionUuidSubscriptionTypesExtension
    {
        public static string Value(this PutV1WebhookSubscriptionUuidSubscriptionTypes value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static PutV1WebhookSubscriptionUuidSubscriptionTypes ToEnum(this string value)
        {
            foreach(var field in typeof(PutV1WebhookSubscriptionUuidSubscriptionTypes).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is PutV1WebhookSubscriptionUuidSubscriptionTypes)
                    {
                        return (PutV1WebhookSubscriptionUuidSubscriptionTypes)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum PutV1WebhookSubscriptionUuidSubscriptionTypes");
        }
    }

}