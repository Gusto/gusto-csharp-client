//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Requests
{
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using System;
    
    public enum Columns
    {
        [JsonProperty("bank_account_account_number")]
        BankAccountAccountNumber,
        [JsonProperty("bank_account_routing_number")]
        BankAccountRoutingNumber,
        [JsonProperty("bank_account_type")]
        BankAccountType,
        [JsonProperty("bank_account")]
        BankAccount,
        [JsonProperty("bonus")]
        Bonus,
        [JsonProperty("cash_tips")]
        CashTips,
        [JsonProperty("check_amount")]
        CheckAmount,
        [JsonProperty("check_date")]
        CheckDate,
        [JsonProperty("commission")]
        Commission,
        [JsonProperty("date_of_birth")]
        DateOfBirth,
        [JsonProperty("double_overtime_earnings")]
        DoubleOvertimeEarnings,
        [JsonProperty("double_overtime_hours")]
        DoubleOvertimeHours,
        [JsonProperty("double_overtime_rate")]
        DoubleOvertimeRate,
        [JsonProperty("employee_additional_taxes")]
        EmployeeAdditionalTaxes,
        [JsonProperty("employee_benefit_contributions")]
        EmployeeBenefitContributions,
        [JsonProperty("employee_compensation_time_period")]
        EmployeeCompensationTimePeriod,
        [JsonProperty("employee_compensation")]
        EmployeeCompensation,
        [JsonProperty("employee_deductions")]
        EmployeeDeductions,
        [JsonProperty("employee_department")]
        EmployeeDepartment,
        [JsonProperty("employee_email")]
        EmployeeEmail,
        [JsonProperty("employee_federal_income_tax")]
        EmployeeFederalIncomeTax,
        [JsonProperty("employee_first_name")]
        EmployeeFirstName,
        [JsonProperty("employee_last_name")]
        EmployeeLastName,
        [JsonProperty("employee_middle_initial")]
        EmployeeMiddleInitial,
        [JsonProperty("employee_medicare_additional_tax")]
        EmployeeMedicareAdditionalTax,
        [JsonProperty("employee_medicare_tax")]
        EmployeeMedicareTax,
        [JsonProperty("employee_phone_number")]
        EmployeePhoneNumber,
        [JsonProperty("employee_social_security_tax")]
        EmployeeSocialSecurityTax,
        [JsonProperty("employee_taxes")]
        EmployeeTaxes,
        [JsonProperty("employee_work_email")]
        EmployeeWorkEmail,
        [JsonProperty("employer_additional_taxes")]
        EmployerAdditionalTaxes,
        [JsonProperty("employer_benefit_contributions")]
        EmployerBenefitContributions,
        [JsonProperty("employer_cost")]
        EmployerCost,
        [JsonProperty("employer_futa_tax")]
        EmployerFutaTax,
        [JsonProperty("employer_medicare_tax")]
        EmployerMedicareTax,
        [JsonProperty("employer_social_security_tax")]
        EmployerSocialSecurityTax,
        [JsonProperty("employer_suta_tax")]
        EmployerSutaTax,
        [JsonProperty("employer_taxes")]
        EmployerTaxes,
        [JsonProperty("employment_type")]
        EmploymentType,
        [JsonProperty("employment")]
        Employment,
        [JsonProperty("end_date")]
        EndDate,
        [JsonProperty("garnishments")]
        Garnishments,
        [JsonProperty("gross_earnings")]
        GrossEarnings,
        [JsonProperty("holiday_earnings")]
        HolidayEarnings,
        [JsonProperty("holiday_hours")]
        HolidayHours,
        [JsonProperty("home_address_city")]
        HomeAddressCity,
        [JsonProperty("home_address_state")]
        HomeAddressState,
        [JsonProperty("home_address_street")]
        HomeAddressStreet,
        [JsonProperty("home_address_zip")]
        HomeAddressZip,
        [JsonProperty("home_address")]
        HomeAddress,
        [JsonProperty("job_title")]
        JobTitle,
        [JsonProperty("net_pay")]
        NetPay,
        [JsonProperty("one_time_reimbursements")]
        OneTimeReimbursements,
        [JsonProperty("overtime_earnings")]
        OvertimeEarnings,
        [JsonProperty("overtime_hours")]
        OvertimeHours,
        [JsonProperty("overtime_rate")]
        OvertimeRate,
        [JsonProperty("paid_time_off_earnings")]
        PaidTimeOffEarnings,
        [JsonProperty("paid_time_off_hours")]
        PaidTimeOffHours,
        [JsonProperty("paid_time_off_rate")]
        PaidTimeOffRate,
        [JsonProperty("pay_period_end")]
        PayPeriodEnd,
        [JsonProperty("pay_period_start")]
        PayPeriodStart,
        [JsonProperty("paycheck_tips")]
        PaycheckTips,
        [JsonProperty("payment_method")]
        PaymentMethod,
        [JsonProperty("payroll_type")]
        PayrollType,
        [JsonProperty("preferred_first_name")]
        PreferredFirstName,
        [JsonProperty("recurring_reimbursements")]
        RecurringReimbursements,
        [JsonProperty("regular_earnings")]
        RegularEarnings,
        [JsonProperty("regular_hours")]
        RegularHours,
        [JsonProperty("regular_rate")]
        RegularRate,
        [JsonProperty("reimbursements")]
        Reimbursements,
        [JsonProperty("risk_class_code")]
        RiskClassCode,
        [JsonProperty("sick_rate")]
        SickRate,
        [JsonProperty("sick_time_off_earnings")]
        SickTimeOffEarnings,
        [JsonProperty("sick_time_off_hours")]
        SickTimeOffHours,
        [JsonProperty("start_date")]
        StartDate,
        [JsonProperty("total_employer_benefit_contributions")]
        TotalEmployerBenefitContributions,
        [JsonProperty("total_time_off_earnings")]
        TotalTimeOffEarnings,
        [JsonProperty("total_time_off_hours")]
        TotalTimeOffHours,
        [JsonProperty("work_address_city")]
        WorkAddressCity,
        [JsonProperty("work_address_street")]
        WorkAddressStreet,
        [JsonProperty("work_address_zip")]
        WorkAddressZip,
    }

    public static class ColumnsExtension
    {
        public static string Value(this Columns value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static Columns ToEnum(this string value)
        {
            foreach(var field in typeof(Columns).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is Columns)
                    {
                        return (Columns)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum Columns");
        }
    }

}