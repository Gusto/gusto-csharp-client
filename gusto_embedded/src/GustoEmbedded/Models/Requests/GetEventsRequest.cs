//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Requests
{
    using GustoEmbedded.Models.Components;
    using GustoEmbedded.Utils;
    
    public class GetEventsRequest
    {

        /// <summary>
        /// A cursor for pagination. Returns all events occuring after the specified UUID (exclusive). Events are sorted according to the provided sort_order param.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=starting_after_uuid")]
        public string? StartingAfterUuid { get; set; }

        /// <summary>
        /// The UUID of the company. If not specified, will return all events for all companies.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=resource_uuid")]
        public string? ResourceUuid { get; set; }

        /// <summary>
        /// Limits the number of objects returned in a single response, between 1 and 100. The default is 25
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")]
        public string? Limit { get; set; }

        /// <summary>
        /// A string containing the exact event name (e.g. `employee.created`), or use a wildcard match to filter for a group of events (e.g. `employee.*`, `*.created`, `notification.*.created` etc.)
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=event_type")]
        public string? EventType { get; set; }

        /// <summary>
        /// A string indicating whether to sort resulting events in ascending (asc) or descending (desc) chronological order. Events are sorted by their `timestamp`. Defaults to asc if left empty.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")]
        public SortOrder? SortOrder { get; set; }

        /// <summary>
        /// Determines the date-based API version associated with your API call. If none is provided, your application&apos;s <a href="https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version">minimum API version</a> is used.
        /// </summary>
        [SpeakeasyMetadata("header:style=simple,explode=false,name=X-Gusto-API-Version")]
        public VersionHeader? XGustoAPIVersion { get; set; } = GustoEmbedded.Models.Components.VersionHeader.TwoThousandAndTwentyFourMinus04Minus01;
    }
}