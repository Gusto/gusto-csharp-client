//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace GustoEmbedded.Models.Errors
{
    using GustoEmbedded.Models.Errors;
    using GustoEmbedded.Utils;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType
    {
        private PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType(string value) { Value = value; }

        public string Value { get; private set; }
        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType UnprocessableEntityErrorObject1 { get { return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType("Unprocessable-Entity-Error-Object1"); } }
        
        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType PayrollBlockersError { get { return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType("Payroll-Blockers-Error"); } }
        
        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType Null { get { return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType v) { return v.Value; }
        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType FromString(string v) {
            switch(v) {
                case "Unprocessable-Entity-Error-Object1": return UnprocessableEntityErrorObject1;
                case "Payroll-Blockers-Error": return PayrollBlockersError;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// Unprocessable Entity
    /// </summary>
    [JsonConverter(typeof(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody.PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyConverter))]
    public class PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody {
        public PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public UnprocessableEntityErrorObject1? UnprocessableEntityErrorObject1 { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public PayrollBlockersError? PayrollBlockersError { get; set; }

        public PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType Type { get; set; }


        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody CreateUnprocessableEntityErrorObject1(UnprocessableEntityErrorObject1 unprocessableEntityErrorObject1) {
            PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType typ = PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.UnprocessableEntityErrorObject1;

            PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody res = new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(typ);
            res.UnprocessableEntityErrorObject1 = unprocessableEntityErrorObject1;
            return res;
        }

        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody CreatePayrollBlockersError(PayrollBlockersError payrollBlockersError) {
            PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType typ = PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.PayrollBlockersError;

            PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody res = new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(typ);
            res.PayrollBlockersError = payrollBlockersError;
            return res;
        }

        public static PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody CreateNull() {
            PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType typ = PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.Null;
            return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(typ);
        }

        public class PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.UnprocessableEntityErrorObject1)
                    {
                        UnprocessableEntityErrorObject1 = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<UnprocessableEntityErrorObject1>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(UnprocessableEntityErrorObject1), new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.UnprocessableEntityErrorObject1), "UnprocessableEntityErrorObject1"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.PayrollBlockersError)
                    {
                        PayrollBlockersError = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<PayrollBlockersError>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(PayrollBlockersError), new PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.PayrollBlockersError), "PayrollBlockersError"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody res = (PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBody)value;
                if (PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.FromString(res.Type).Equals(PutV1CompaniesCompanyIdPayrollsPayrollIdSubmitResponseBodyType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.UnprocessableEntityErrorObject1 != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.UnprocessableEntityErrorObject1));
                    return;
                }
                if (res.PayrollBlockersError != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.PayrollBlockersError));
                    return;
                }

            }

        }

    }
}